// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.24.0
// source: comment.sql

package db

import (
	"context"
)

const createComment = `-- name: CreateComment :one
INSERT INTO "comment" (
  message, author, card
) VALUES ( 
 $1, $2, $3
 ) RETURNING id, message, author, card, deleted_at, created_at
`

type CreateCommentParams struct {
	Message string `json:"message"`
	Author  int64  `json:"author"`
	Card    int64  `json:"card"`
}

func (q *Queries) CreateComment(ctx context.Context, arg CreateCommentParams) (Comment, error) {
	row := q.db.QueryRowContext(ctx, createComment, arg.Message, arg.Author, arg.Card)
	var i Comment
	err := row.Scan(
		&i.ID,
		&i.Message,
		&i.Author,
		&i.Card,
		&i.DeletedAt,
		&i.CreatedAt,
	)
	return i, err
}
